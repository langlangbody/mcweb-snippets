{
  "export": {
    "prefix": "vue3-export default",
    "body": [
      "export default {$1}"
    ],
    "description": "export"
  },
  "reactive": {
    "prefix": "vue3-reactive",
    "body": [
      "const data = reactive({$1})"
    ],
    "description": "reactive"
  },
  "watchFn": {
    "prefix": "vue3-watch",
    "body": [
      "watch(() => {$1})"
    ],
    "description": "watchFn"
  },
  "watchEffect": {
    "prefix": "vue3-watchEffect",
    "body": [
      "watchEffect(() => {",
      "\t${1}",
      "})"
    ],
    "description": "watchEffect"
  },
  "watchArray": {
    "prefix": "vue3-watchArray",
    "body": [
      "watch([${1:foo}, ${2:bar}], ([new${1}, new${2}], [prev${1}, prev${2}]) => {",
      "\t${3}",
      "})"
    ],
    "description": "watch as array"
  },
  "Vue3:computed": {
    "prefix": "vue3-computed",
    "body": [
      "computed(() => {",
      "\tget: () => {}",
      "\tset: () => {}",
      "})"
    ],
    "description": "computed"
  },
  "toRefs": {
    "prefix": "vue3-toRefs",
    "body": [
      "toRefs($1)"
    ],
    "description": "toRefs"
  },
  "ref": {
    "prefix": "vue3-ref",
    "body": [
      "ref($1)"
    ],
    "description": "ref"
  },
  "props3": {
    "prefix": "vue3-props",
    "body": [
      "props{",
      "\t$1: $2",
      "}"
    ],
    "description": "toRefs"
  },
  "onBeforeMount": {
    "prefix": "vue3-onBeforeMount",
    "body": [
      "onBeforeMount(() => {$1})"
    ],
    "description": "onBeforeMount"
  },
  "onMounted": {
    "prefix": "vue3-onMounted",
    "body": [
      "onMounted(() => {$1})"
    ],
    "description": "onMounted"
  },
  "onBeforeUpdate": {
    "prefix": "vue3-onBeforeUpdate",
    "body": [
      "onBeforeUpdate(() => {$1})"
    ],
    "description": "onBeforeUpdate"
  },
  "onUpdated": {
    "prefix": "vue3-onUpdated",
    "body": [
      "onUpdated(() => {$1})"
    ],
    "description": "onUpdated"
  },
  "onBeforeUnmount": {
    "prefix": "vue3-onBeforeUnmount",
    "body": [
      "onBeforeUnmount(() => {$1})"
    ],
    "description": "onBeforeUnmount"
  },
  "onUnmounted": {
    "prefix": "vue3-onUnmounted",
    "body": [
      "onUnmounted(() => {$1})"
    ],
    "description": "onUnmounted"
  },
  "onErrorCaptured": {
    "prefix": "vue3-onErrorCaptured",
    "body": [
      "onErrorCaptured(() => {$1})"
    ],
    "description": "onErrorCaptured"
  }
}